El diccionario:

El objeto que tiene todo es points, esta ubicado en el archivo animar.py

Queremos convertir points, el cual son matrices dentro de matrices
en un diccionario JSON para poder mandarle eso al Unity
El objeto points ya tiene logica pero nose si asi nomas como matris
se lo vamos a mandar a unity, creo que se tienen que poner titulos y 
la mamada para que se pueda leer con JSON, te dejo como esta estructurado
points para que lo empieces a ser en un diccionario JSON.

Suerte bb

--------------------------------------------------------------------------------

Points se ve asi:

[[carros], [semaforos]]

    dentro de carros se ve asi:
    [carro1, carro2, carro3, etc...]

        dentro de estos carros se ve asi
        [[self.x, self.y, self.id, self.skin, self.vl, self.vuelta],[self.x, self.y, self.id, self.skin, self.vl, self.vuelta],[self.x, self.y, self.id, self.skin, self.vl, self.vuelta], etc...]



    y dentro de semaforos se ve asi:                <= los objetos de aqui son grupos de 4 semaforos
    [semaforo1, semaforo2, semaforo3, etc...]

        dentro de semaforo1 se veria asi:
        [[sem1, sem2, sem3, sem4]]

            dentro de sem1 se ve asi:
            [[id, estado], [id, estado], [id, estado], [id, estado], etc...]



            with open("sample.json", "w") as outfile:
    outfile.write(jsonStr)
    
    
'''fig, ax = plt.subplots(1, 1)
fig.set_size_inches(14, 7)



def animate(i):
        ax.clear()
        point = points[0][i]
        point2 = points[1][i]
        point3 = points[2][i]
        
        pp1 = point[2] - point[0]
        ppp1 = point[3] - point[1]
        pp2 = point2[2] - point2[0]
        ppp2 = point2[3] - point2[1]
        pp3 = point3[2] - point3[0]
        ppp3 = point3[3] - point3[1]    
        
        """ if(pp1 < 0):
            pp1 = 0
        if(pp2 < 0):
            pp2 = 0
        if(pp3 < 0):
            pp3 = 0
        if(ppp1 < 0):
            ppp1 = 0
        if(ppp2 < 0):
            ppp2 = 0
        if(ppp3 < 0):
            ppp3 = 0"""
        
        
        ax.plot(point[0], point[1], color='green', label='original', marker='o')

        ax.arrow(point[0], point[1], pp1, ppp1, head_width=32, head_length=50, fc='green', ec='green')
        ax.plot(point2[0], point2[1], color='blue', label='original', marker='o')
        ax.arrow(point2[0], point2[1], pp2, ppp2, head_width=32, head_length=50, fc='blue', ec='blue')
        ax.plot(point3[0], point3[1], color='red', label='original', marker='o')    
        ax.arrow(point3[0], point3[1], pp3, ppp3, head_width=32, head_length=50, fc='red', ec='red')
        
        ax.set_xlim([0, 300])
        ax.set_ylim([0, 300])
  
 


ani = FuncAnimation(fig, animate, frames=len(points[0]), interval=0.01, repeat=False)
plt.show()'''